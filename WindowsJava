


using System;

class Program
{
    static void Main(string[] args)
    {
        Console.Write("Enter a non-negative integer: ");
        if (int.TryParse(Console.ReadLine(), out int number) && number >= 0)
        {
            long factorial = 1;
            for (int i = 1; i <= number; i++)
            {
                factorial *= i;
            }
            Console.WriteLine($"Factorial of {number} is {factorial}");
        }
        else
        {
            Console.WriteLine("Invalid input. Please enter a non-negative integer.");
        }
    }
}







using System;

class Program
{
    static bool IsPrime(int number)
    {
        if (number <= 1)
            return false;
        if (number <= 3)
            return true;
        if (number % 2 == 0 || number % 3 == 0)
            return false;
        
        for (int i = 5; i * i <= number; i += 6)
        {
            if (number % i == 0 || number % (i + 2) == 0)
                return false;
        }
        
        return true;
    }

    static void Main(string[] args)
    {
        if (args.Length != 2)
        {
            Console.WriteLine("Error: Please provide exactly two integer arguments.");
            return;
        }

        if (int.TryParse(args[0], out int num1) && int.TryParse(args[1], out int num2))
        {
            int start = Math.Min(num1, num2);
            int end = Math.Max(num1, num2);

            if (start <= end)
            {
                for (int i = start; i <= end; i++)
                {
                    if (IsPrime(i))
                        Console.Write(i + (i == end || i == end - 1 ? "" : ", "));
                }
            }
            else
            {
                for (int i = start; i >= end; i--)
                {
                    if (IsPrime(i))
                        Console.Write(i + (i == end || i == end + 1 ? "" : ", "));
                }
            }
            
            Console.WriteLine();
        }
        else
        {
            Console.WriteLine("Error: Both arguments must be valid integers.");
        }
    }
}











using System;

class Program
{
    static void Main()
    {
        // Define correct username and password
        string correctUsername = "Monica";
        string correctPassword = "Gupta";

        int attempts = 3;
        bool loggedIn = false;

        Console.WriteLine("Welcome to the Login Program");

        while (attempts > 0 && !loggedIn)
        {
            Console.Write("Username: ");
            string username = Console.ReadLine();
            Console.Write("Password: ");
            string password = Console.ReadLine();

            if (username == correctUsername && password == correctPassword)
            {
                loggedIn = true;
                Console.WriteLine("Welcome, Monica!");
            }
            else
            {
                attempts--;
                Console.WriteLine($"Incorrect username or password. {attempts} attempts remaining.");
            }
        }

        if (!loggedIn)
        {
            Console.WriteLine("You have exceeded the maximum number of login attempts. Press Enter to exit.");
            Console.ReadLine(); // Wait for Enter key press to exit
        }
    }
}











using System;

class Program
{
    static void Main()
    {
        // Declare an integer array of 6 elements
        int[] arr = new int[6];

        // Take 6 elements from the user as input
        for (int i = 0; i < 6; i++)
        {
            Console.Write($"Enter element {i + 1}: ");
            arr[i] = Convert.ToInt32(Console.ReadLine());
        }

        // 1. Find the maximum and minimum from the array and print them
        int maxNum = arr[0];
        int minNum = arr[0];

        foreach (int num in arr)
        {
            if (num > maxNum)
                maxNum = num;
            if (num < minNum)
                minNum = num;
        }

        Console.WriteLine($"Maximum: {maxNum}");
        Console.WriteLine($"Minimum: {minNum}");

        // 2. Print all even numbers from the array
        Console.Write("Even numbers: ");
        foreach (int num in arr)
        {
            if (num % 2 == 0)
                Console.Write(num + " ");
        }
        Console.WriteLine();

        // 3. Print the square of each element of the array
        Console.Write("Squared elements: ");
        foreach (int num in arr)
        {
            int square = num * num;
            Console.Write(square + " ");
        }
        Console.WriteLine();
    }
}













import java.util.Scanner;

// Base class representing the MainOS
class MainOS {
    protected boolean mouseOperable;
    protected String desktop;
    protected String fileManager;

    public MainOS() {
        mouseOperable = true;
        desktop = "Default Desktop";
        fileManager = "Default File Manager";
    }

    public void displayFeatures() {
        System.out.println("Mouse operable: " + mouseOperable);
        System.out.println("Desktop: " + desktop);
        System.out.println("File Manager: " + fileManager);
    }
}

// Derived class for Windows OS
class WinOS extends MainOS {
    private String cmd;

    public WinOS() {
        cmd = "Command Prompt";
    }

    @Override
    public void displayFeatures() {
        super.displayFeatures();
        System.out.println("Command Line Interface: " + cmd);
    }
}

// Derived class for Linux OS
class LinuxOS extends MainOS {
    private String terminal;

    public LinuxOS() {
        terminal = "Terminal";
    }

    @Override
    public void displayFeatures() {
        super.displayFeatures();
        System.out.println("Terminal: " + terminal);
    }
}

// Derived class for MacOS
class MacOS extends MainOS {
    private String terminal;

    public MacOS() {
        terminal = "Terminal";
    }

    @Override
    public void displayFeatures() {
        super.displayFeatures();
        System.out.println("Terminal: " + terminal);
    }
}

// Class representing a Dell laptop
class DellLaptop {
    private MainOS os;

    public DellLaptop(MainOS os) {
        this.os = os;
    }

    public void displayFeatures() {
        System.out.println("Dell Laptop Features:");
        os.displayFeatures();
    }
}

public class OperatingSystemMenu {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("Welcome to Dell Laptop OS selection:");
            System.out.println("1. Windows OS");
            System.out.println("2. Linux OS");
            System.out.println("3. MacOS");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");

            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    DellLaptop winLaptop = new DellLaptop(new WinOS());
                    winLaptop.displayFeatures();
                    break;
                case 2:
                    DellLaptop linuxLaptop = new DellLaptop(new LinuxOS());
                    linuxLaptop.displayFeatures();
                    break;
                case 3:
                    DellLaptop macLaptop = new DellLaptop(new MacOS());
                    macLaptop.displayFeatures();
                    break;
                case 4:
                    System.out.println("Exiting the program.");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
                    break;
            }
        } while (choice != 4);

        scanner.close();
    }
}
